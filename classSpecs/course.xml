<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE spec SYSTEM "http://www.cs.stolaf.edu/lib/SpecML/SpecML.dtd">
<?xml-stylesheet
   href="http://www.cs.stolaf.edu/lib/SpecML/SpecMLToHTML.xsl"
   type="text/xsl"?>

<spec>
<title>The Course Class Specification</title>
<header>This class models a course at St Olaf College.</header>
<credits>Xandra Best. Wednesday, May 15, 2013</credits>

<class name="Course">

<nosuperclass/>

<variables>
<var name="id" type="ID">Course id.</var>
<var name="title" type="string">Title of course.</var>
<var name="description" type="string">Description of course.</var>
<var name="majors" type="vector of Major">Majors associated with course.</var>
<var name="department" type="vector of Department">Departments associated with course.</var>
<var name="concentrations" type="string">Concentrations associated with course</var>
<var name="conversations" type="string">Conversations associated with course.</var>
<var name="professor" type="string">Professor of course.</var>
<var name="half_semester" type="int">Whether course is half-semester.</var>
<var name="pass_fail" type="bool">Whether course is pass-fail.</var>
<var name="credits" type="float">Number of credits with course.</var>
<var name="location" type="string">Location of classes.</var>
<var name="courseType" type="course_type_t">Type of course. (L/T/S)</var>
<var name="geneds" type="GenEd">GenEds associated with course.</var>
<var name="days" type="bool">Array of days of classes.</var>
<var name="time" type="float">Array of times of classes.</var>
</variables>

<constructors-list>

<constructor>
<desc>Default constructor.</desc>
<noarguments />
<statechange>Initializes null Course object with reasonable default values.</statechange>
</constructor>

<constructor>
<desc>Regular constructor.</desc>
<arguments>
<arg name="str" type="string">ID of course.</arg>
</arguments>
<statechange>Initializes Course object by calling init.</statechange>
</constructor>

<constructor>
<desc>Copy constructor.</desc>
<arguments>
<arg name="c" type="const Course">Reference to a course.</arg>
</arguments>
<statechange>Initializes Course object as a copy of the given course.</statechange>
</constructor>

<constructor>
<desc>Read-in constructor.</desc>
<arguments>
<arg name="is" type="istream">Reference to istream.</arg>
</arguments>
<statechange>Initializes Course object with data read in from istream.</statechange>
</constructor>

</constructors-list>

<methods-list>

<method name="init" visibility="private">
<desc>Course initializer.</desc>
<arguments>
<arg name="identifier" type="string">Course ID.</arg>
</arguments>
<statechange>Initializes instance of Course object.</statechange>
<return>No return value.</return>
</method>

<method name="copy" visibility="private">
<desc>Makes Course object a copy of another course.</desc>
<arguments>
<arg name="c" type="const Course">Reference to a Course object.</arg>
</arguments>
<statechange>sets all state variables equal to state variables of c.</statechange>
<return>No return value.</return>
</method>

<method name="=" returntype="Course">
<desc>Assignment operator.</desc>
<arguments>
<arg name="c" type="const Course">Reference to Course object.</arg>
</arguments>
<statechange>State variables are changed to match those of Course c.</statechange>
<return>Reference to copy of c.</return>
</method>

<method name="==" returntype="friend bool">
<desc>Equal to operator.</desc>
<arguments>
<arg name="c1" type="const Course">Reference to first Course object.</arg>
<arg name="c2" type="const Course">Reference to second Course object.</arg>
</arguments>
<statechange>No state change.</statechange>
<return>True if courses are identical.</return>
</method>

<method name="!=" returntype="friend bool">
<desc>Not equal to operator</desc>
<arguments>
<arg name="c1" type="Course">Reference to first Course object.</arg>
<arg name="c2" type="Course">Reference to second Course object.</arg>
</arguments>
<statechange></statechange>
<return>True if courses are not identical.</return>
</method>

<method name="getCourse" returntype="friend Course">
<desc>Identifies and returns course.</desc>
<arguments>
<arg name="identifier" type="string">Course ID.</arg>
</arguments>
<statechange>No state change.</statechange>
<return>Course object associated with identifier, or null course if not found.</return>
</method>

<method name="cleanTitle">
<desc>Cleans course title.</desc>
<noarguments/>
<statechange>Sets title to a cleaner version.</statechange>
<return>No return value.</return>
</method>

<method name="getDepartment" returntype="Department">
<desc>Get department.</desc>
<arguments>
<arg name="i" type="int">Index of department vector.</arg>
</arguments>
<statechange>No state change.</statechange>
<return>Returns specified Department object </return>
</method>

<method name="getProfessor" returntype="string">
<desc>Get professor.</desc>
<noarguments/>
<statechange>No state change.</statechange>
<return>Returns professor.</return>
</method>

<method name="getID" returntype="ID">
<desc>Get ID.</desc>
<noarguments/>
<statechange>No state change.</statechange>
<return>Returns ID.</return>
</method>

<method name="getType" returntype="string">
<desc>Get course type.</desc>
<noarguments/>
<statechange>No state change.</statechange>
<return>Returns string of course type.</return>
</method>

<method name="getNumber" returntype="int">
<desc>Get ID number.</desc>
<noarguments/>
<statechange>No state change.</statechange>
<return>Returns number part of ID.</return>
</method>

<method name="getSection" returntype="string">
<desc>Get ID section.</desc>
<noarguments />
<statechange>No state change.</statechange>
<return>Returns section part of ID.</return>
</method>

<method name="getData" returntype="ostream">
<desc>Get course type, ID, title, professor.</desc>
<arguments>
<arg name="os" type="ostream">Reference to ostream.</arg>
</arguments>
<statechange>Writes out this data to ostream.</statechange>
<return>Returns reference to ostream containing this data.</return>
</method>

<method name="display">
<desc>Displays data on Course object.</desc>
<noarguments />
<statechange>No state change.</statechange>
<return>Couts course type, ID, title, professor.</return>
</method>

<method name="showAll">
<desc>Displays all data on Course object.</desc>
<arguments>
<arg name="os" type="ostream">Reference to ostream.</arg>
</arguments>
<statechange>No state change.</statechange>
<return>Couts id, title, prof, type, half_semester, credits, pass_fail, location. </return>
</method>

</methods-list>

</class>

</spec>
